from tkinter import*
from tkinter.messagebox import *
from tkinter.ttk import*
chemistry = Tk()
chemistry.configure(bg="light blue")
chemistry.geometry("500x1500")
chemistry.title("stoichiometry calculator made by Chris")
labelquestion1 = Label(chemistry,text="mass-mole-molar mass")
labelinstruction1 = Label(chemistry,text="please select what are you trying to calculate")
optionOne = Combobox(chemistry,values=["mole","mass","molar mass"])
labelquestion2 = Label(chemistry,text="number of particle-mole-avogrado constant")
labelinstruction2 = Label(chemistry,text="please select what are you trying to calculate")
optionTwo = Combobox(chemistry,values=["number of particle","mole"])
labelquestion3 = Label(chemistry,text="concentration-mole-volume")
labelinstruction3 = Label(chemistry,text="please select what are you trying to calculate")
optionThree = Combobox(chemistry,values=["concentration","mole","volume"])
labelquestion4 = Label(chemistry,text="mass-density-volume")
labelinstruction4 = Label(chemistry,text="please select what are you trying to calculate")
optionFour = Combobox(chemistry,values=["mass","density","volume"])
labelquestion5 = Label(chemistry,text="osmotic pressure")
labelmass1 = Label(chemistry,text="mass")
labelmole1 = Label(chemistry,text="mole")
labelmolarmass1 = Label(chemistry,text="molar mass")
entrymass1 = Entry(chemistry)
entrymole1 = Entry(chemistry)
entrymolarmass1 = Entry(chemistry)
labelnumofparticle2 = Label(chemistry,text="number of particle")
labelmole2 = Label(chemistry,text="mole")
labelavogrado2 = Label(chemistry,text="avogrado constant")
entrynumofparticle2 = Entry(chemistry)
entrymole2 = Entry(chemistry)
avogradoconstant = 6.022 * (10**23)
entryavogrado2 = Entry(chemistry)
entryavogrado2.insert(0,avogradoconstant)
labelconcentration3 = Label(chemistry,text="concentration/molarity")
labelmole3 = Label(chemistry,text="mole")
labelvolume3 = Label(chemistry,text="volume")
entryconcentration3 = Entry(chemistry)
entrymole3 = Entry(chemistry)
entryvolume3 = Entry(chemistry)
labelmass4 = Label(chemistry,text="mass")
labeldensity4 = Label(chemistry,text="density")
labelvolume4 = Label(chemistry,text="volume")
entrymass4 = Entry(chemistry)
entrydensity4 = Entry(chemistry)
entryvolume4 = Entry(chemistry)
labelosmotic = Label(chemistry,text="osmotic pressure")
labeli5 = Label(chemistry,text="van't Hoff's factor")
labelmolarity5 = Label(chemistry,text="concentration/molarity")
labelidealgasconstant5 = Label(chemistry,text="ideal gas constant")
labeltemperature5 = Label(chemistry,text="temperature in kelvin")
entryosmotic5 = Entry(chemistry)
entryi5 = Entry(chemistry)
entrymolarity5 = Entry(chemistry)
idealgaslawconstant5 = 0.08206
entryidealgasconstant5 = Entry(chemistry)
entryidealgasconstant5.insert(0,idealgaslawconstant5)
entrytemperature5 = Entry(chemistry)
def calculationone():
	try:
		mole = entrymole1.get()
		mass = entrymass1.get()
		molarmass = entrymolarmass1.get()
		mole = float(mole)
		mass = float(mass)
		molarmass = float(molarmass)
	except ValueError:
		pass
	if optionOne.get() == "mole":
		result = float(mass)/float(molarmass)
		entrymole1.insert(0,result)
	if optionOne.get() == "mass":
		result = float(mole) * float(molarmass)
		entrymass1.insert(0,result)
	if optionOne.get() == "molar mass":
		result = float(mass)/float(mole)
		entrymolarmass1.insert(0,result)
def calculationtwo():
	try:
		numofparticle = entrynumofparticle2.get()
		mole = entrymole2.get()
		ac = 6.022 * (10**23)
		numofparticle = float(numofparticle)
		mole = float(mole)
		ac = float(ac)
	except ValueError:
		pass
	if optionTwo.get() ==  "number of particle":
		result = float(mole) * float(ac)
		entrynumofparticle2.insert(0,result)
	if optionTwo.get() == "mole":
		result = float(numofparticle)/float(ac)
		entrymole2.insert(0,result)
def calculationthree():
	try:
		c = entryconcentration3.get()
		mole = entrymole3.get()
		volume = entryvolume3.get()
		c = float(c)
		mole = float(mole)
		volume = float(volume)
	except ValueError:
		pass
	if optionThree.get() == "concentration":
		result = float(mole)/float(volume)
		entryconcentration3.insert(0,result)
	if optionThree.get() == "mole":
		result = float(c) * float(volume)
		entrymole3.insert(0,result)
	if optionThree.get() == "volume":
		result = float(mole)/float(c)
		entryvolume3.insert(0,result)
def calculatiomfour():
	try:
		mass = entrymass4.get()
		density = entrydensity4.get()
		volume = entryvolume4.get()
		mass = float(mass)
		density = float(density)
		volume = float(volume)
	except ValueError:
		pass
	if optionFour.get() == "mass":
		result = float(density) * float(volume)
		entrymass4.insert(0,result)
	if optionFour.get() == "density":
		result = float(mass)/float(volume)
		entrydensity4.insert(0,result)
	if optionFour.get() == "volume":
		result = float(mass)/float(density)
		entryvolume4.insert(0,result)
def calculationfive():
	try:
		i = float(entryi5.get())
		m = float(entrymolarity5.get())
		constant = 0.08206
		t = float(entrytemperature5.get())
	except ValueError:
		pass
	result = i * m * constant * t
	entryosmotic5.insert(0,result)
buttonone = Button(chemistry,text="calculate",command=calculationone)
buttontwo = Button(chemistry,text="calculate",command=calculationtwo)
buttonthree = Button(chemistry,text="calculate",command=calculationthree)
buttonfour = Button(chemistry,text="calculate",command=calculatiomfour)
buttonfive = Button(chemistry,text="calculate",command=calculationfive)
labelquestion1.grid(row=0,column=0)
labelinstruction1.grid(row=0,column=1)
optionOne.grid(row=0,column=2)
labelmass1.grid(row=0,column=3)
entrymass1.grid(row=0,column=4)
labelmole1.grid(row=0,column=5)
entrymole1.grid(row=0,column=6)
labelmolarmass1.grid(row=0,column=7)
entrymolarmass1.grid(row=0,column=8)
buttonone.grid(row=1,column=0)
labelquestion2.grid(row=2,column=0)
labelinstruction2.grid(row=2,column=1)
optionTwo.grid(row=2,column=2)
labelnumofparticle2.grid(row=2,column=3)
entrynumofparticle2.grid(row=2,column=4)
labelavogrado2.grid(row=2,column=5)
entryavogrado2.grid(row=2,column=6)
labelmole2.grid(row=2,column=7)
entrymole2.grid(row=2,column=8)
buttontwo.grid(row=3,column=0)
labelquestion3.grid(row=4,column=0)
labelinstruction3.grid(row=4,column=1)
optionThree.grid(row=4,column=2)
labelconcentration3.grid(row=4,column=3)
entryconcentration3.grid(row=4,column=4)
labelmole3.grid(row=4,column=5)
entrymole3.grid(row=4,column=6)
labelvolume3.grid(row=4,column=7)
entryvolume3.grid(row=4,column=8)
buttonthree.grid(row=5,column=0)
labelquestion4.grid(row=6,column=0)
labelinstruction4.grid(row=6,column=1)
optionFour.grid(row=6,column=2)
labelmass4.grid(row=6,column=3)
entrymass4.grid(row=6,column=4)
labeldensity4.grid(row=6,column=5)
entrydensity4.grid(row=6,column=6)
labelvolume4.grid(row=6,column=7)
entryvolume4.grid(row=6,column=8)
buttonfour.grid(row=7,column=0)
labelquestion5.grid(row=8,column=0)
labeli5.grid(row=9,column=0)
entryi5.grid(row=9,column=1)
labelmolarity5.grid(row=9,column=2)
entrymolarity5.grid(row=9,column=3)
labelidealgasconstant5.grid(row=9,column=4)
entryidealgasconstant5.grid(row=9,column=5)
labeltemperature5.grid(row=9,column=6)
entrytemperature5.grid(row=9,column=7)
labelosmotic.grid(row=10,column=0)
entryosmotic5.grid(row=10,column=1)
buttonfive.grid(row=10,column=3)
if __name__ == "__main__":
    chemistry.mainloop()